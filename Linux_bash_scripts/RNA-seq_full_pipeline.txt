########################################################################
# Alveolar macrophages paired-end RNA-seq: full bioinformatic pipeline #
########################################################################


##################
# File check sum #
##################

# Move and rename raw data files received from BGI into storage directory
cd /workspace/storage/nnalpas/ALV_MAC_RNAseq/F13TSFEUHT0200_BOSipaR/raw_data
for file in `ls 130414*_CHKPEI12120043*.fq.gz`; do outfile=`echo $file | perl -p -e 's/130414_I\d{3}(_.*ACXX)(_.{2})_(.*)(_[1,2]\.fq\.gz)/Raw$1-$3$2$4/'`; mv ./$file /workspace/storage/nnalpas/ALV_MAC_RNAseq/fastq_sequence/raw_reads/DM-pool-A/$outfile; done;
for file in `ls 130414*_CHKPEI12120044*.fq.gz`; do outfile=`echo $file | perl -p -e 's/130414_I\d{3}(_.*ACXX)(_.{2})_(.*)(_[1,2]\.fq\.gz)/Raw$1-$3$2$4/'`; mv ./$file /workspace/storage/nnalpas/ALV_MAC_RNAseq/fastq_sequence/raw_reads/DM-pool-B/$outfile; done;
for file in `ls 130414*_CHKPEI12120045*.fq.gz`; do outfile=`echo $file | perl -p -e 's/130414_I\d{3}(_.*ACXX)(_.{2})_(.*)(_[1,2]\.fq\.gz)/Raw$1-$3$2$4/'`; mv ./$file /workspace/storage/nnalpas/ALV_MAC_RNAseq/fastq_sequence/raw_reads/DM-pool-C/$outfile; done;

# Create and enter the md5sum output directory
mkdir -p $HOME/scratch/ALV_MAC_RNAseq/md5check
cd $HOME/scratch/ALV_MAC_RNAseq/md5check

# Create shell script to calculate the md5sum on raw data fastq files
for file in `find /workspace/storage/nnalpas/ALV_MAC_RNAseq/fastq_sequence/raw_reads -name *fq.gz`; do echo "md5sum $file >> md5sum_check.txt" >> md5sum.sh; done;

# Split and run all scripts on Stampede server
split -d -l 12 md5sum.sh md5sum.sh.
for script in `ls md5sum.sh.*`
do
chmod 755 $script
nohup ./$script > ${script}.nohup &
done

# Compare the md5sum obtained by us with the md5 from BGI
cp /workspace/storage/nnalpas/ALV_MAC_RNAseq/fastq_sequence/MD5_raw.txt $HOME/scratch/ALV_MAC_RNAseq/md5check/MD5_raw_BGI.txt

# Move and rename clean data files received from BGI into storage directory
cd /workspace/storage/nnalpas/ALV_MAC_RNAseq/F13TSFEUHT0200_BOSipaR/clean_reads
for file in `ls *CHKPEI12120043*.fq.gz`; do mv ./$file /workspace/storage/nnalpas/ALV_MAC_RNAseq/fastq_sequence/clean_reads/DM-pool-A/$file; done;
for file in `ls *CHKPEI12120044*.fq.gz`; do mv ./$file /workspace/storage/nnalpas/ALV_MAC_RNAseq/fastq_sequence/clean_reads/DM-pool-B/$file; done;
for file in `ls *CHKPEI12120045*.fq.gz`; do mv ./$file /workspace/storage/nnalpas/ALV_MAC_RNAseq/fastq_sequence/clean_reads/DM-pool-C/$file; done;

# Check the md5sum to make sure of file integrity
cd $HOME/scratch/ALV_MAC_RNAseq/md5check

# Create shell script to calculate the md5sum on clean data fastq files
for file in `find /workspace/storage/nnalpas/ALV_MAC_RNAseq/fastq_sequence/clean_reads -name *fq.gz`; do echo "md5sum $file >> md5sum_clean_check.txt" >> md5sum_clean.sh; done;

# Split and run all scripts on Stampede server
for script in `ls md5sum_clean.sh`
do
chmod 755 $script
nohup ./$script > ${script}.nohup &
done

# Compare the md5sum obtained by us with the md5 from BGI
cp /workspace/storage/nnalpas/ALV_MAC_RNAseq/fastq_sequence/MD5_clean.txt $HOME/scratch/ALV_MAC_RNAseq/md5check/MD5_clean_BGI.txt

# The whole fastq_sequence directory can be changed to read and execute only, all write permission for everyone are removed
chmod -R 555 /workspace/storage/nnalpas/ALV_MAC_RNAseq/fastq_sequence


#######################################
# FastQC quality check of fastq files #
#######################################

# Required software is FastQC, consult manual/tutorial for details: http://www.bioinformatics.babraham.ac.uk/projects/fastqc/

# Create and enter the quality check output directory
mkdir $HOME/scratch/ALV_MAC_RNAseq/quality_check
cd $HOME/scratch/ALV_MAC_RNAseq/quality_check

# Create shell script to perform FastQC quality check on your fastq files
for file in `find /home/nnalpas/storage/ALV_MAC_RNAseq/fastq_sequence/raw_reads/ -name *fq.gz`; do echo "fastqc --noextract --nogroup -t 1 -o $HOME/scratch/ALV_MAC_RNAseq/quality_check $file" >> fastqc.sh; done;

# Split and run all scripts on Stampede
split -d -l 2 fastqc.sh fastqc.sh.
for script in `ls fastqc.sh.*`
do
chmod 755 $script
nohup ./$script > ${script}.nohup &
done

# Check all output from FastQC particularly for the level of reads duplication
cd /home/dmagee/scratch/ALV_MAC_RNAseq/quality_check
mkdir /home/dmagee/scratch/ALV_MAC_RNAseq/quality_check/tmp
for file in `ls *_fastqc.zip`; do unzip $file -d /home/dmagee/scratch/ALV_MAC_RNAseq/quality_check/tmp; done;
for file in `find /home/dmagee/scratch/ALV_MAC_RNAseq/quality_check/tmp -name summary.txt`; do more $file | grep "FAIL" >> fastqc_unfiltered_fail.txt; done;
rm -rf /home/dmagee/scratch/ALV_MAC_RNAseq/quality_check/tmp


#####################################
# Deconvolution of pool fastq files #
#####################################

# Requirements are Perl and String::Approx perl module, consult manual/tutorial of module for details: http://search.cpan.org/~jhi/String-Approx-3.26/Approx.pm

# Note that perl script, `Processing_paired_reads.pl`, was optimised to work specifically with paired-end reads with index barcode of 6 bases length positioned at the tag position of the read header, also this perl script can work on compressed (.gz) or uncompressed seqfile and performs adapter filtering, quality filtering and trimming

# Create a new directory for deconvolution
mkdir $HOME/scratch/ALV_MAC_RNAseq/fastq_sequence/
cd $HOME/scratch/ALV_MAC_RNAseq/fastq_sequence/

# Copy the required indices files and adapter filtering files into this directory
for file in `ls /home/nnalpas/scratch/ALV_MAC_RNAseq/fastq_sequence/pool_*_indices.txt`; do cp $file ./`basename $file`; done;
cp /home/nnalpas/scratch/ALV_MAC_RNAseq/fastq_sequence/Adapter_sequence.txt ./Adapter_sequence.txt

# Create shell script to perform deconvolution of each pool fastq files
for file in `find /workspace/storage/nnalpas/ALV_MAC_RNAseq/fastq_sequence/raw_reads/ -name *1.fq.gz`; do file2=`echo $file | perl -p -e 's/1(\.fq.gz)$/2$1/'`; pool=`echo $file | perl -p -e 's/^.*DM-pool-(.).*$/$1/'`; echo "perl /home/nnalpas/SVN/Processing_paired_reads.pl -seqfile1 $file -seqfile2 $file2 -indices $HOME/scratch/ALV_MAC_RNAseq/fastq_sequence/pool_${pool}_indices.txt -adapter_filt $HOME/scratch/ALV_MAC_RNAseq/fastq_sequence/Adapter_sequence.txt -amatch_param i_3_S3_D0_I0 -quality_filt 20 -quality_bases 25 -trim_mate1 5end_0_keep_90_3end_0 -trim_mate2 5end_0_keep_90_3end_0 -illumina_version 1.5" >> deconv_filt_pool${pool}.sh; done;

# Split and run all scripts on Stampede
for script in `ls deconv_filt_*.sh`
do
chmod 755 $script
nohup ./$script > ${script}.nohup &
done

# Check very carefully the different perl script outputs per pool_fastq_file to see if all reads have been processed; the .report file gives you all statistics you need in terms of number of reads per individual samples, tags occurence ...
more [lane_fastq_file].report

# Compile all deconvolution reports into a single file
cd /workspace/scratch/dmagee/ALV_MAC_RNAseq/fastq_sequence/
ls /workspace/scratch/dmagee/ALV_MAC_RNAseq/fastq_sequence/*_1_2_deconv.report > deconv_report.txt
nohup perl /home/nnalpas/SVN/Compile_deconv_report.pl -list_reports deconv_report.txt -output all_deconv_report.txt

# Move all excluded and filtered out read files into a directory
mkdir /workspace/scratch/dmagee/ALV_MAC_RNAseq/fastq_sequence/Excluded
cd /workspace/scratch/dmagee/ALV_MAC_RNAseq/fastq_sequence/
for file in `ls *.excluded`; do mv ./$file ./Excluded/$file; done;


##################################################
# FastQC quality check of individual fastq files #
##################################################

# Required software is FastQC, consult manual/tutorial for details: http://www.bioinformatics.babraham.ac.uk/projects/fastqc/

# Go to working directory
cd $HOME/scratch/ALV_MAC_RNAseq/quality_check

# Create shell script to perform FastQC quality check on individual samples fastq files
for file in `ls $HOME/scratch/ALV_MAC_RNAseq/fastq_sequence/*.fastq`; do echo "fastqc --noextract --nogroup -t 1 -o $HOME/scratch/ALV_MAC_RNAseq/quality_check $file" >> fastqc_deconv_filt.sh; done;

# Split and run all scripts on Stampede
split -d -l 26 fastqc_deconv_filt.sh fastqc_deconv_filt.sh.
for script in `ls fastqc_deconv_filt.sh.*`
do
chmod 755 $script
nohup ./$script &
done

# Check all output from FastQC to determine best quality filtering strategy if required
cd /home/dmagee/scratch/ALV_MAC_RNAseq/quality_check
mkdir $HOME/scratch/ALV_MAC_RNAseq/quality_check/tmp
for file in `ls *pe*_fastqc.zip`; do unzip $file -d $HOME/scratch/ALV_MAC_RNAseq/quality_check/tmp; done;
for file in `find $HOME/scratch/ALV_MAC_RNAseq/quality_check/tmp -name summary.txt`; do more $file | grep "FAIL" >> fastqc_fail.txt; done;
rm -rf $HOME/scratch/ALV_MAC_RNAseq/quality_check/tmp

# Tidy up the quality_check directory
mkdir $HOME/scratch/ALV_MAC_RNAseq/quality_check/pre_deconvolution
for file in `ls Raw*_fastqc.zip`; do mv ./$file ./pre_deconvolution/$file; done;
mv ./fastqc.sh ./pre_deconvolution/fastqc.sh
mv ./fastqc_unfiltered_fail.txt ./post_deconvolution/fastqc_unfiltered_fail.txt
mkdir $HOME/scratch/ALV_MAC_RNAseq/quality_check/post_deconvolution
for file in `ls *pe*_fastqc.zip`; do mv ./$file ./post_deconvolution/$file; done;
mv ./fastqc_deconv_filt.sh ./post_deconvolution/fastqc_deconv_filt.sh
mv ./fastqc_fail.txt ./post_deconvolution/fastqc_fail.txt
mkdir $HOME/scratch/ALV_MAC_RNAseq/quality_check/post_alignment


#####################################################################################
# STAR alignment of individual filtered samples against Bos taurus reference genome #
#####################################################################################

# Required software is STAR, consult manual/tutorial for details: http://code.google.com/p/rna-star/downloads/detail?name=STARmanual_2.3.0.1.pdf&can=2&q=

# Download the Bos taurus reference genome from ftp://ftp.ensembl.org/pub/release-71/fasta/bos_taurus/dna/ and transfer it to your user account
mkdir -p /workspace/storage/genomes/bostaurus/UMD3.1.71/source_file
cd /workspace/storage/genomes/bostaurus/UMD3.1.71/source_file
nohup wget -v -o logfile ftp://ftp.ensembl.org/pub/release-71/fasta/bos_taurus/dna/Bos_taurus.UMD3.1.71.dna.toplevel.fa.gz &
gunzip Bos_taurus.UMD3.1.71.dna.toplevel.fa.gz

# Index the reference genome using STAR
mkdir -p /workspace/storage/genomes/bostaurus/UMD3.1.71/STAR2.3.0e/STAR2.3.0e_no_annotation/
cd /workspace/storage/genomes/bostaurus/UMD3.1.71/STAR2.3.0e/STAR2.3.0e_no_annotation/
nohup STAR --runMode genomeGenerate --genomeDir /workspace/storage/genomes/bostaurus/UMD3.1.71/STAR2.3.0e/STAR2.3.0e_no_annotation/ --genomeFastaFiles /workspace/storage/genomes/bostaurus/UMD3.1.71/source_file/Bos_taurus.UMD3.1.71.dna.toplevel.fa --runThreadN 8 &

# Create and enter alignment working directory
mkdir $HOME/scratch/ALV_MAC_RNAseq/Alignment
cd $HOME/scratch/ALV_MAC_RNAseq/Alignment

# Create shell script to perform alignment of individual samples fastq files
for file in `ls $HOME/scratch/ALV_MAC_RNAseq/fastq_sequence/*1.fastq`; do file2=`echo $file | perl -p -e 's/\_pe1\.fastq/\_pe2\.fastq/'`; sample=`basename $file | perl -p -e 's/_pe1.fastq//'`; echo "mkdir $HOME/scratch/ALV_MAC_RNAseq/Alignment/$sample; cd $HOME/scratch/ALV_MAC_RNAseq/Alignment/$sample; STAR --runMode alignReads --genomeDir /workspace/storage/genomes/bostaurus/UMD3.1.71/STAR2.3.0e/STAR2.3.0e_no_annotation/ --genomeLoad LoadAndRemove --readFilesIn $file $file2 --runThreadN 3 --outFilterMultimapNmax 10 --outSAMmode Full --outSAMattributes Standard --outFileNamePrefix ./${sample}_ --outReadsUnmapped Fastx" >> alignment.sh; done;

# Split and run all scripts on Stampede
split -d -l 26 alignment.sh alignment.sh.
for script in `ls alignment.sh.*`
do
chmod 755 $script
nohup ./$script &
done

# Compile all STAR log.final.out files from 127 individual samples into a single file
for file in `find $HOME/scratch/ALV_MAC_RNAseq/Alignment/ -name *Log.final.out`; do perl /home/nnalpas/SVN/star_report_opener.pl -report $file; done;

# Tidy up the Alignment directory to allow more alignment to be done
mv $HOME/scratch/ALV_MAC_RNAseq/Alignment/ $HOME/scratch/ALV_MAC_RNAseq/Btaurus/
mkdir $HOME/scratch/ALV_MAC_RNAseq/Alignment/
mv $HOME/scratch/ALV_MAC_RNAseq/Btaurus/ $HOME/scratch/ALV_MAC_RNAseq/Alignment/Btaurus


#############################################
# FastQC quality check of aligned sam files #
#############################################

# Required software is FastQC, consult manual/tutorial for details: http://www.bioinformatics.babraham.ac.uk/projects/fastqc/

# Go to working directory
cd $HOME/scratch/ALV_MAC_RNAseq/quality_check/post_alignment

# Create shell script to perform FastQC quality check on individual samples aligned sam files
for file in `find $HOME/scratch/ALV_MAC_RNAseq/Alignment/Btaurus -name *.sam`; do echo "fastqc --noextract --nogroup -t 1 -o $HOME/scratch/ALV_MAC_RNAseq/quality_check/post_alignment $file" >> fastqc_aligned.sh; done;

# Split and run all scripts on Stampede
split -d -l 13 fastqc_aligned.sh fastqc_aligned.sh.
for script in `ls fastqc_aligned.sh.*`
do
chmod 755 $script
nohup ./$script &
done

# Check all output from FastQC particularly for the level of reads duplication
cd /home/dmagee/scratch/ALV_MAC_RNAseq/quality_check/post_alignment
mkdir /home/dmagee/scratch/ALV_MAC_RNAseq/quality_check/post_alignment/tmp
for file in `ls *_fastqc.zip`; do unzip $file -d /home/dmagee/scratch/ALV_MAC_RNAseq/quality_check/post_alignment/tmp; done;
for file in `find /home/dmagee/scratch/ALV_MAC_RNAseq/quality_check/post_alignment/tmp -name summary.txt`; do more $file | grep "FAIL" >> fastqc_aligned_fail.txt; done;
rm -rf /home/dmagee/scratch/ALV_MAC_RNAseq/quality_check/post_alignment/tmp


##############################################################################################
# STAR alignment of individual filtered samples against Mycobacterium bovis reference genome #
##############################################################################################

# Use STAR aligner to align our fastq files; required software is STAR, consult manual for details: http://code.google.com/p/rna-star/

# Download the Mycobacterium bovis reference genome from http://www.ncbi.nlm.nih.gov/nuccore/31791177?report=fasta and transfer it to your user account via WinSCP

# Create working directory for genome indexing
mkdir -p /workspace/storage/genomes/Mycobacterium_bovis/NC_002945.3/STAR2.3.0e
mkdir -p /workspace/storage/genomes/Mycobacterium_bovis/NC_002945.3/source_file

# Index the M. bovis reference genome with STAR
cd /workspace/storage/genomes/Mycobacterium_bovis/NC_002945.3/STAR2.3.0e
nohup STAR --runMode genomeGenerate --genomeDir /workspace/storage/genomes/Mycobacterium_bovis/NC_002945.3/STAR2.3.0e --genomeFastaFiles /workspace/storage/genomes/Mycobacterium_bovis/NC_002945.3/source_file/Mycobacterium_bovis_NC_002945.3.fasta --genomeSAindexNbases 7 --runThreadN 1 &

# Create and enter working directory for alignment
mkdir /home/dmagee/scratch/ALV_MAC_RNAseq/Alignment/Mbovis
cd /home/dmagee/scratch/ALV_MAC_RNAseq/Alignment/Mbovis

# Create shell script to perform alignment of individual samples fastq files against the M. bovis reference genome
for file in `ls /home/dmagee/scratch/ALV_MAC_RNAseq/fastq_sequence/*1.fastq`; do file2=`echo $file | perl -p -e 's/\_pe1\.fastq/\_pe2\.fastq/'`; sample=`basename $file | perl -p -e 's/_pe1.fastq//'`; echo "mkdir /home/dmagee/scratch/ALV_MAC_RNAseq/Alignment/Mbovis/$sample; cd /home/dmagee/scratch/ALV_MAC_RNAseq/Alignment/Mbovis/$sample; STAR --runMode alignReads --genomeDir /workspace/storage/genomes/Mycobacterium_bovis/NC_002945.3/STAR2.3.0e --genomeLoad NoSharedMemory --readFilesIn $file $file2 --runThreadN 1 --outFilterMultimapNmax 10 --outSAMmode Full --outSAMattributes Standard --outFileNamePrefix ./${sample}_ --outReadsUnmapped Fastx" >> alignment_Mbovis.sh; done;

# Split and run all scripts on Stampede
split -d -l 26 alignment_Mbovis.sh alignment_Mbovis.sh.
for script in `ls alignment_Mbovis.sh.*`
do
chmod 755 $script
nohup ./$script &
done

# Compile all STAR log.final.out files from 127 individual samples into a single file
for file in `find /home/dmagee/scratch/ALV_MAC_RNAseq/Alignment/Mbovis -name *Log.final.out`; do perl $HOME/SVN/star_report_opener.pl -report $file; done;

# Delete all unaligned reads in files *_Unmapped.out.mate(1|2) since they are not needed
for file in `find /workspace/scratch/dmagee/ALV_MAC_RNAseq/Alignment/Mbovis -name *_Unmapped.out.mate1`; do file2=`echo $file | perl -p -e 's/mate1/mate2/'`; rm -f $file $file2; done;


#####################################################################################################
# STAR alignment of individual filtered samples against Mycobacterium tuberculosis reference genome #
#####################################################################################################

# Use STAR aligner to align our fastq files; required software is STAR, consult manual for details: http://code.google.com/p/rna-star/

# Download the Mycobacterium tuberculosis reference genome from http://www.ncbi.nlm.nih.gov/nuccore/NC_000962.3 and transfer it to your user account via WinSCP

# Create working directory for genome indexing
mkdir -p /workspace/storage/genomes/Mycobacterium_tuberculosis/NC_000962.3/STAR2.3.0e
mkdir -p /workspace/storage/genomes/Mycobacterium_tuberculosis/NC_000962.3/source_file	# Directory which contains the fasta file

# Index the M. tuberculosis reference genome with STAR
cd /workspace/storage/genomes/Mycobacterium_tuberculosis/NC_000962.3/STAR2.3.0e
nohup STAR --runMode genomeGenerate --genomeDir /workspace/storage/genomes/Mycobacterium_tuberculosis/NC_000962.3/STAR2.3.0e --genomeFastaFiles /workspace/storage/genomes/Mycobacterium_tuberculosis/NC_000962.3/source_file/Mycobacterium_tuberculosis_NC_000962.3.fasta --genomeSAindexNbases 7 --runThreadN 1 &

# Create and enter working directory for alignment
mkdir /home/dmagee/scratch/ALV_MAC_RNAseq/Alignment/Mtuberculosis
cd /home/dmagee/scratch/ALV_MAC_RNAseq/Alignment/Mtuberculosis

# Create shell script to perform alignment of individual samples fastq files against the M. bovis reference genome
for file in `ls /home/dmagee/scratch/ALV_MAC_RNAseq/fastq_sequence/*1.fastq`; do file2=`echo $file | perl -p -e 's/\_pe1\.fastq/\_pe2\.fastq/'`; sample=`basename $file | perl -p -e 's/_pe1.fastq//'`; echo "mkdir /home/dmagee/scratch/ALV_MAC_RNAseq/Alignment/Mtuberculosis/$sample; cd /home/dmagee/scratch/ALV_MAC_RNAseq/Alignment/Mtuberculosis/$sample; STAR --runMode alignReads --genomeDir /workspace/storage/genomes/Mycobacterium_tuberculosis/NC_000962.3/STAR2.3.0e --genomeLoad NoSharedMemory --readFilesIn $file $file2 --runThreadN 1 --outFilterMultimapNmax 10 --outSAMmode Full --outSAMattributes Standard --outFileNamePrefix ./${sample}_ --outReadsUnmapped Fastx" >> alignment_Mtuberculosis.sh; done;

# Split and run all scripts on Stampede
split -d -l 26 alignment_Mtuberculosis.sh alignment_Mtuberculosis.sh.
for script in `ls alignment_Mtuberculosis.sh.*`
do
chmod 755 $script
nohup ./$script &
done

# Compile all STAR log.final.out files from 127 individual samples into a single file
for file in `find /home/dmagee/scratch/ALV_MAC_RNAseq/Alignment/Mtuberculosis -name *Log.final.out`; do perl $HOME/SVN/star_report_opener.pl -report $file; done;

# Delete all unaligned reads in files *_Unmapped.out.mate(1|2) since they are not needed
for file in `find /workspace/scratch/dmagee/ALV_MAC_RNAseq/Alignment/Mtuberculosis -name *_Unmapped.out.mate1`; do file2=`echo $file | perl -p -e 's/mate1/mate2/'`; rm -f $file $file2; done;


##################################################
# Compress all fastq files of individual samples #
##################################################

# Go to working directory
cd /workspace/scratch/dmagee/ALV_MAC_RNAseq/fastq_sequence

# Compress all fastq files of individual samples
for file in `ls *.fastq`; do excluded=`echo $file | perl -p -e 's/\.fastq/\.excluded/'`; echo "gzip -9 $file" >> compression.sh; echo "gzip -9 ./Excluded/$excluded" >> compression.sh; done;
for file in `ls ./Excluded/Raw*.excluded`; do echo "gzip -9 $file" >> compression.sh; done;

# Split and run all scripts on Stampede
split -d -l 56 compression.sh compression.sh.
for script in `ls compression.sh.*`
do
chmod 755 $script
nohup ./$script > ${script}.nohup &
done


#####################################################################
# Compress all unaligned reads in fastq files of individual samples #
#####################################################################

# Go to working directory
cd /workspace/scratch/dmagee/ALV_MAC_RNAseq/Alignment/Btaurus

# Compress all fastq files of individual samples
for file in `find /workspace/scratch/dmagee/ALV_MAC_RNAseq/Alignment/Btaurus -name *_Unmapped.out.mate1`; do file2=`echo $file | perl -p -e 's/\.mate1/\.mate2/'`; echo "gzip -9 $file" >> unmapped_compression.sh; echo "gzip -9 $file2" >> unmapped_compression.sh; done;

# Run script on Stampede
chmod 755 unmapped_compression.sh
nohup ./unmapped_compression.sh &


#########################################################
# Summarisation count with featureCounts for sense gene #
#########################################################

# Use featureCounts to perform count summarisation; required package is featureCounts which is part of subread software, consult manual for details: http://bioinf.wehi.edu.au/subread-package/SubreadUsersGuide.pdf

# Create working directories
mkdir -p $HOME/scratch/ALV_MAC_RNAseq/Count_summarisation/sense

# Run featureCounts on SAM file containing multihits and uniquely mapped reads using stranded parameter
cd $HOME/scratch/ALV_MAC_RNAseq/Count_summarisation/sense
for file in `find $HOME/scratch/ALV_MAC_RNAseq/Alignment/Btaurus -name *_Aligned.out.sam`; do sample=`basename $file | perl -p -e 's/_Aligned.out.sam//'`; echo "mkdir $HOME/scratch/ALV_MAC_RNAseq/Count_summarisation/sense/$sample; cd $HOME/scratch/ALV_MAC_RNAseq/Count_summarisation/sense/$sample; featureCounts -a /workspace/storage/genomes/bostaurus/UMD3.1.71/annotation_file/Bos_taurus.UMD3.1.71.gtf -t exon -g gene_id -i $file -o $sample -s 1 -T 1 -R -p -B -C" >> sense_count.sh; done;

# Split and run all scripts on Stampede
split -d -l 26 sense_count.sh sense_count.sh.
for script in `ls sense_count.sh.*`
do
chmod 755 $script
nohup ./$script > ${script}.nohup &
done

# Summarise the annotation performed on each samples for stranded featureCounts run
cd /workspace/scratch/dmagee/ALV_MAC_RNAseq/Count_summarisation/
for file in `find /home/dmagee/scratch/ALV_MAC_RNAseq/Count_summarisation/sense/ -name N*H.reads`
do
echo echo "\`basename $file\` \`cut $file -f2 | sort | uniq -c | perl -p -e 's/\n/ /'\` >> annotation_summary_sense.txt" >> annotation_summary_sense.sh
done

# Run script on Stampede
split -d -l 6 annotation_summary_sense.sh annotation_summary_sense.sh.
for script in `ls annotation_summary_sense.sh.*`
do
chmod 755 $script
nohup ./$script &
done

# Create working directory
mkdir -p $HOME/scratch/ALV_MAC_RNAseq/edgeR/sense

# Copy gene count files into working directory
for file in `find /home/dmagee/scratch/ALV_MAC_RNAseq/Count_summarisation/sense -name N*H.reads`; do file2=`basename $file | perl -p -e 's/.reads//'`; cp /home/dmagee/scratch/ALV_MAC_RNAseq/Count_summarisation/sense/$file2/$file2 $HOME/scratch/ALV_MAC_RNAseq/edgeR/sense/$file2; done;

# Perform subsequent sense genes analyses in R, follow pipeline: `1_alv-mac-edgeR-pipeline.R`


####################################################################################
# Compress all reads information of individual samples obtained from featureCounts #
####################################################################################

# Go to working directory for Count_summarisation
cd /home/dmagee/scratch/ALV_MAC_RNAseq/Count_summarisation/

# Compress all reads files of individual samples from featureCounts
for file in `find /home/dmagee/scratch/ALV_MAC_RNAseq/Count_summarisation/ -name *.reads`; do echo "gzip -9 $file" >> reads_info_compression.sh; done;

# Run all scripts on Stampede
split -d -l 31 reads_info_compression.sh reads_info_compression.sh.
for script in `ls reads_info_compression.sh.*`
do
chmod 755 $script
nohup ./$script > ${script}_nohup &
done


#########################################
# Compress all SAM files into BAM files #
#########################################

# Create a working directory and enter this directory
mkdir /home/dmagee/scratch/ALV_MAC_RNAseq/Annotated_BAM
cd /workspace/scratch/dmagee/ALV_MAC_RNAseq/Annotated_BAM

# Compress all SAM files into BAM files
for file in `find /workspace/scratch/dmagee/ALV_MAC_RNAseq/Alignment/Btaurus/ -name "*_Aligned.out.sam"`; do sample=`basename $file | perl -p -e 's/_Aligned.out.sam//'`; echo "samtools view -bhS $file | samtools sort - ${sample}" >> TB_sam_to_bam_sorted.sh; done;

# Run all scripts on Stampede
split -d -l 4 TB_sam_to_bam_sorted.sh TB_sam_to_bam_sorted.sh.
for script in `ls TB_sam_to_bam_sorted.sh.*`
do
chmod 755 $script
nohup ./$script > ${script}_nohup &
done

# Remove all SAM files which have been compressed into BAM after checking the BAM files
for file in `find /workspace/scratch/dmagee/ALV_MAC_RNAseq/Alignment/Btaurus/ -name "*_Aligned.out.sam"`; do rm -f $file; done;



############################################
# ALV_MAC_RNAseq project authorised access #
############################################

# In order for the different users involved in the ALV_MAC project to access generated files, these commands needs to be run on regular basis (ideally after each work session)

# Change the ownership and access rights of all files created to date for the group, to be run by dmagee and/or nnalpas
chown -R dmagee:alvmac /workspace/scratch/dmagee/ALV_MAC_RNAseq
chown -R nnalpas:alvmac /workspace/scratch/dmagee/ALV_MAC_RNAseq
chmod -R 775 /workspace/scratch/dmagee/ALV_MAC_RNAseq
for file in `find /workspace/scratch/dmagee/ALV_MAC_RNAseq/ -name '*.txt'`; do chmod -R 664 $file; done;
for file in `find /workspace/scratch/dmagee/ALV_MAC_RNAseq/ -name '*.gtf'`; do chmod -R 664 $file; done;
for file in `find /workspace/scratch/dmagee/ALV_MAC_RNAseq/ -name '*.gff'`; do chmod -R 664 $file; done;
for file in `find /workspace/scratch/dmagee/ALV_MAC_RNAseq/ -name '*.zip'`; do chmod -R 664 $file; done;
for file in `find /workspace/scratch/dmagee/ALV_MAC_RNAseq/ -name '*.fa'`; do chmod -R 664 $file; done;
for file in `find /workspace/scratch/dmagee/ALV_MAC_RNAseq/ -name '*nohup'`; do chmod -R 664 $file; done;
for file in `find /workspace/scratch/dmagee/ALV_MAC_RNAseq/ -name '*.sh'`; do chmod -R 775 $file; done;
for file in `find /workspace/scratch/dmagee/ALV_MAC_RNAseq/ -name '*.gz'`; do chmod -R 444 $file; done;
for file in `find /workspace/scratch/dmagee/ALV_MAC_RNAseq/ -name '*.bam'`; do chmod -R 444 $file; done;

